"use strict";(self["webpackChunksad"]=self["webpackChunksad"]||[]).push([[728],{7647:function(t,e,n){n.d(e,{dF:function(){return F},fi:function(){return O}});n(1703);var i=n(6482),a=n(8737),r=n(675),s=n(2043);const u=new a.Yd(r.i),o={},l=s.O$.from(0),p=s.O$.from(-1);function m(t,e,n,i){const r={fault:e,operation:n};return void 0!==i&&(r.value=i),u.throwError(t,a.Yd.errors.NUMERIC_FAULT,r)}let d="0";while(d.length<256)d+=d;function y(t){if("number"!==typeof t)try{t=s.O$.from(t).toNumber()}catch(e){}return"number"===typeof t&&t>=0&&t<=256&&!(t%1)?"1"+d.substring(0,t):u.throwArgumentError("invalid decimal size","decimals",t)}function f(t,e){null==e&&(e=0);const n=y(e);t=s.O$.from(t);const i=t.lt(l);i&&(t=t.mul(p));let a=t.mod(n).toString();while(a.length<n.length-1)a="0"+a;a=a.match(/^([0-9]*[1-9]|0)(0*)/)[1];const r=t.div(n).toString();return t=1===n.length?r:r+"."+a,i&&(t="-"+t),t}function c(t,e){null==e&&(e=0);const n=y(e);"string"===typeof t&&t.match(/^-?[0-9.]+$/)||u.throwArgumentError("invalid decimal value","value",t);const i="-"===t.substring(0,1);i&&(t=t.substring(1)),"."===t&&u.throwArgumentError("missing value","value",t);const a=t.split(".");a.length>2&&u.throwArgumentError("too many decimal points","value",t);let r=a[0],o=a[1];r||(r="0"),o||(o="0");while("0"===o[o.length-1])o=o.substring(0,o.length-1);o.length>n.length-1&&m("fractional component exceeds decimals","underflow","parseFixed"),""===o&&(o="0");while(o.length<n.length-1)o+="0";const l=s.O$.from(r),d=s.O$.from(o);let f=l.mul(n).add(d);return i&&(f=f.mul(p)),f}class h{constructor(t,e,n,i){t!==o&&u.throwError("cannot use FixedFormat constructor; use FixedFormat.from",a.Yd.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=e,this.width=n,this.decimals=i,this.name=(e?"":"u")+"fixed"+String(n)+"x"+String(i),this._multiplier=y(i),Object.freeze(this)}static from(t){if(t instanceof h)return t;"number"===typeof t&&(t=`fixed128x${t}`);let e=!0,n=128,i=18;if("string"===typeof t)if("fixed"===t);else if("ufixed"===t)e=!1;else{const a=t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);a||u.throwArgumentError("invalid fixed format","format",t),e="u"!==a[1],n=parseInt(a[2]),i=parseInt(a[3])}else if(t){const a=(e,n,i)=>null==t[e]?i:(typeof t[e]!==n&&u.throwArgumentError("invalid fixed format ("+e+" not "+n+")","format."+e,t[e]),t[e]);e=a("signed","boolean",e),n=a("width","number",n),i=a("decimals","number",i)}return n%8&&u.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",n),i>80&&u.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",i),new h(o,e,n,i)}}class w{constructor(t,e,n,i){t!==o&&u.throwError("cannot use FixedNumber constructor; use FixedNumber.from",a.Yd.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=i,this._hex=e,this._value=n,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(t){this.format.name!==t.format.name&&u.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",t)}addUnsafe(t){this._checkFormat(t);const e=c(this._value,this.format.decimals),n=c(t._value,t.format.decimals);return w.fromValue(e.add(n),this.format.decimals,this.format)}subUnsafe(t){this._checkFormat(t);const e=c(this._value,this.format.decimals),n=c(t._value,t.format.decimals);return w.fromValue(e.sub(n),this.format.decimals,this.format)}mulUnsafe(t){this._checkFormat(t);const e=c(this._value,this.format.decimals),n=c(t._value,t.format.decimals);return w.fromValue(e.mul(n).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(t){this._checkFormat(t);const e=c(this._value,this.format.decimals),n=c(t._value,t.format.decimals);return w.fromValue(e.mul(this.format._multiplier).div(n),this.format.decimals,this.format)}floor(){const t=this.toString().split(".");1===t.length&&t.push("0");let e=w.from(t[0],this.format);const n=!t[1].match(/^(0*)$/);return this.isNegative()&&n&&(e=e.subUnsafe(b.toFormat(e.format))),e}ceiling(){const t=this.toString().split(".");1===t.length&&t.push("0");let e=w.from(t[0],this.format);const n=!t[1].match(/^(0*)$/);return!this.isNegative()&&n&&(e=e.addUnsafe(b.toFormat(e.format))),e}round(t){null==t&&(t=0);const e=this.toString().split(".");if(1===e.length&&e.push("0"),(t<0||t>80||t%1)&&u.throwArgumentError("invalid decimal count","decimals",t),e[1].length<=t)return this;const n=w.from("1"+d.substring(0,t),this.format),i=g.toFormat(this.format);return this.mulUnsafe(n).addUnsafe(i).floor().divUnsafe(n)}isZero(){return"0.0"===this._value||"0"===this._value}isNegative(){return"-"===this._value[0]}toString(){return this._value}toHexString(t){if(null==t)return this._hex;t%8&&u.throwArgumentError("invalid byte width","width",t);const e=s.O$.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();return(0,i.$m)(e,t/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(t){return w.fromString(this._value,t)}static fromValue(t,e,n){return null!=n||null==e||(0,s.Zm)(e)||(n=e,e=null),null==e&&(e=0),null==n&&(n="fixed"),w.fromString(f(t,e),h.from(n))}static fromString(t,e){null==e&&(e="fixed");const n=h.from(e),a=c(t,n.decimals);!n.signed&&a.lt(l)&&m("unsigned value cannot be negative","overflow","value",t);let r=null;n.signed?r=a.toTwos(n.width).toHexString():(r=a.toHexString(),r=(0,i.$m)(r,n.width/8));const s=f(a,n.decimals);return new w(o,r,s,n)}static fromBytes(t,e){null==e&&(e="fixed");const n=h.from(e);if((0,i.lE)(t).length>n.width/8)throw new Error("overflow");let a=s.O$.from(t);n.signed&&(a=a.fromTwos(n.width));const r=a.toTwos((n.signed?0:1)+n.width).toHexString(),u=f(a,n.decimals);return new w(o,r,u,n)}static from(t,e){if("string"===typeof t)return w.fromString(t,e);if((0,i._t)(t))return w.fromBytes(t,e);try{return w.fromValue(t,0,e)}catch(n){if(n.code!==a.Yd.errors.INVALID_ARGUMENT)throw n}return u.throwArgumentError("invalid FixedNumber value","value",t)}static isFixedNumber(t){return!(!t||!t._isFixedNumber)}}const b=w.from(1),g=w.from("0.5"),v="units/5.7.0",T=new a.Yd(v),x=["wei","kwei","mwei","gwei","szabo","finney","ether"];function _(t,e){if("string"===typeof e){const t=x.indexOf(e);-1!==t&&(e=3*t)}return f(t,null!=e?e:18)}function M(t,e){if("string"!==typeof t&&T.throwArgumentError("value must be a string","value",t),"string"===typeof e){const t=x.indexOf(e);-1!==t&&(e=3*t)}return c(t,null!=e?e:18)}function F(t){return _(t,18)}function O(t){return M(t,18)}},9147:function(t){t.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"_sad","type":"address"},{"internalType":"address","name":"_lp","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"LPRewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LPStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LPWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"exit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lp","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lp_balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"lp_earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lp_exit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lp_feeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lp_getReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lp_getRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lp_lastTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lp_min","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lp_rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lp_rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feeRate","type":"uint256"}],"name":"lp_setFeeRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_min","type":"uint256"}],"name":"lp_setMin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"lp_stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lp_totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"lp_withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"min","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sad","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feeRate","type":"uint256"}],"name":"setFeeRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_min","type":"uint256"}],"name":"setMin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]')}}]);
//# sourceMappingURL=728.c5b97df4.js.map